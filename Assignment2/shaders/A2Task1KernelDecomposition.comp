#version 450
/* built in:
in uvec3 gl_NumWorkGroups;
in uvec3 gl_WorkGroupID;
in uvec3 gl_LocalInvocationID;
in uvec3 gl_GlobalInvocationID;
in uint  gl_LocalInvocationIndex;
*/
layout(local_size_x_id = 0, local_size_y = 1, local_size_z = 1) in;

layout(push_constant) uniform PushStruct {
    uint size;
    uint offset;
} p;

layout(binding = 0) buffer inBuffer {uint v[];};
layout(binding = 1) buffer outBuffer {uint g_v[];};

shared uint[gl_WorkGroupSize.x] shared_sum;

void main() {
    uint gID = gl_GlobalInvocationID.x;

    uint index1 = gID + p.offset;
    uint index2 = index1 + p.size/2;
    if(index1>=p.size || index2>= p.size){
        return;
    }
    shared_sum[gl_LocalInvocationIndex] = v[index1] + v[index2];

    barrier();

    if(gl_LocalInvocationIndex==0){
        uint result = 0;
        for(uint index=0; index<gl_WorkGroupSize.x; index++){
            result+=shared_sum[index];
        }
        g_v[gl_WorkGroupID.x] = result;
    }
}